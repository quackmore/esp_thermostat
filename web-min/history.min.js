function update_page(){esp_get_history()}function sort_data(t){return Promise.resolve(t.sort((function(t,a){return t.ts-a.ts})))}function esp_get_history(){$.ajax({type:"GET",url:esp8266.url+"/api/ctrl/log",dataType:"json",crossDomain:esp8266.cors,timeout:5e3,success:function(t){Promise.resolve().then((function(){return Promise.resolve(t.ctrl_events.sort((function(t,a){return t.ts-a.ts})))})).then((function(){return Promise.resolve(formatData(t.ctrl_events))})).then((function(){createChart()}))},error:function(t,a,e){ajax_error(t,a,e)}})}$(document).ready((function(){setTimeout((function(){$("#awaiting").modal("hide")}),1e3),update_page()})),$("#history_refresh").on("click",(function(){$("#awaiting").modal("show"),setTimeout((function(){$("#awaiting").modal("hide")}),1e3),update_page()}));var temperatureData=[],humidityData=[],min_humy=0,max_humy=100,min_temp=-20,max_temp=100,spData=[],heaterData=[];function formatData(t){temperatureData=[];for(var a=(new Date).getTime()/1e3-2592e3;t[0].ts<a;)t.shift();a=t[0].ts,endDate=t[t.length-1].ts,temperatureData=[],t.forEach((function(t){1==t.tp&&temperatureData.push({x:new Date(1e3*t.ts),y:t.vl/10})})),humidityData=[],t.forEach((function(t){5==t.tp&&humidityData.push({x:new Date(1e3*t.ts),y:t.vl/10})})),spData=[],t.forEach((function(t){4==t.tp&&spData.push({x:new Date(1e3*t.ts),y:t.vl/10})})),heaterData=[],t.forEach((function(t){2==t.tp&&heaterData.push({x:new Date(1e3*t.ts),y:t.vl})})),temperatureData.length>0&&(temperatureData[0].x>new Date(1e3*a)&&temperatureData.unshift({x:new Date(1e3*a),y:temperatureData[0].y}),temperatureData[temperatureData.length-1].x<new Date(1e3*endDate)&&temperatureData.push({x:new Date(1e3*endDate),y:temperatureData[temperatureData.length-1].y}),min_temp=min_array_val(temperatureData),max_temp=max_array_val(temperatureData),min_sp=min_array_val(spData),max_sp=max_array_val(spData),min_temp>min_sp&&(min_temp=min_sp),max_temp<max_sp&&(max_temp=max_sp),max_temp+=(max_temp-(min_temp-=(max_temp-min_temp)/5))/2),humidityData.length>0&&(humidityData[0].x>new Date(1e3*a)&&humidityData.unshift({x:new Date(1e3*a),y:humidityData[0].y}),humidityData[humidityData.length-1].x<new Date(1e3*endDate)&&humidityData.push({x:new Date(1e3*endDate),y:humidityData[humidityData.length-1].y}),(min_humy=min_array_val(humidityData))<0?min_humy=0:min_humy/=4,max_humy=(max_humy=max_array_val(humidityData))>99?110:100-(100-max_humy)/1.5),spData.length>0&&(spData[0].x>new Date(1e3*a)&&spData.unshift({x:new Date(1e3*a),y:min_temp}),spData[spData.length-1].x<new Date(1e3*endDate)&&spData.push({x:new Date(1e3*endDate),y:spData[spData.length-1].y})),heaterData.length>0&&(heaterData[0].x>new Date(1e3*a)&&heaterData.unshift({x:new Date(1e3*a),y:opposite_heater_status(heaterData[0].y)}),heaterData[heaterData.length-1].x<new Date(1e3*endDate)&&heaterData.push({x:new Date(1e3*endDate),y:heaterData[heaterData.length-1].y}))}function opposite_heater_status(t){return 0==t?1:0}var myChart,ctx=$("#historyChart");function createChart(){myChart=new Chart(ctx,{type:"scatter",data:{datasets:[{label:"Temperature",data:temperatureData,pointRadius:0,showLine:!0,fill:!1,borderColor:"green",borderWidth:1,yAxisID:"temp-axis"},{label:"Humidity",data:humidityData,pointRadius:0,showLine:!0,fill:!1,borderColor:"blue",borderWidth:1,yAxisID:"humy-axis"},{label:"Setpoint",data:spData,pointRadius:0,showLine:!0,steppedLine:!0,fill:!1,borderColor:"red",borderWidth:1,yAxisID:"temp-axis"},{label:"Heater",data:heaterData,pointRadius:0,showLine:!0,steppedLine:!0,fill:!1,borderColor:"black",borderWidth:1,yAxisID:"heater-axis"}]},options:{legend:{display:!0,position:"bottom"},scales:{xAxes:[{type:"time",time:{displayFormats:{minute:"HH:mm"}}}],yAxes:[{id:"temp-axis",type:"linear",position:"left",ticks:{min:min_temp,max:max_temp}},{id:"humy-axis",type:"linear",position:"right",ticks:{min:min_humy,max:max_humy}},{id:"heater-axis",type:"linear",position:"right",ticks:{min:0,max:3,display:!1},gridLines:{display:!1,drawBorder:!1}}]},responsive:!0}})}function max_array_val(t){var a=-500;return t.forEach((function(t){t.y>a&&(a=t.y)})),a}function min_array_val(t){var a=500;return t.forEach((function(t){t.y<a&&(a=t.y)})),a}